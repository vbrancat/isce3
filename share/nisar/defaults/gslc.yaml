runconfig:
    name: gslc_workflow_default

    groups:
        pge_name_group:
            pge_name: GSLC_L_PGE

        input_file_group:
            # REQUIRED - One NISAR L1B RSLC formatted HDF5 file
            input_file_path:

            # Filename of the input file for QA.
            # REQUIRED for QA. NOT REQUIRED if only running Product SAS.
            # If Product SAS and QA SAS are run back-to-back,
            # this field should be identical to `sas_output_file`.
            # Otherwise, this field should contain the filename of the single
            # NISAR product for QA to process.
            qa_input_file: gslc.h5

        dynamic_ancillary_file_group:
            # REQUIRED - Digital elevation model
            dem_file:

            # OPTIONAL - Digital elevation model file description, optional
            dem_file_description:

            # External orbit file
            orbit_file:

            # TEC file used for geolocation correction. If no file present, no
            # TEC correction is applied
            tec_file:

            # List of GSLCs from previous cycles.
            # Data driven GSLC will be activated when this field has a valid value.
            # In this case the model driven corrections will be applied first, and
            # the residual relative geolocation error will be estimated with
            # data driven approch.
            # When refernce_gslc is empty, only the model driven correction will be applied.
            reference_gslc:

            # File containing the locations of the corner reflectors
            # in the input product.
            # Required for `point_target_analyzer` QA-CalTools workflow to
            # generate results. If a file is not provided, or if the corner
            # file has no useful data for the given input product, then no
            # results will be generated.
            # Default: None
            corner_reflector_file:

        product_path_group:
            # Directory where PGE will place results. Irrelevant to SAS.
            product_path: product_path

            # Directory where SAS can write temporary data
            scratch_path: .

            # SAS writes output product to the following file. PGE may rename.
            # NOTE: For R2 will need to handle mixed-mode case with multiple outputs of RSLC workflow.
            sas_output_file: gslc.h5

            # Output directory to store all QA output files.
            # Defaults to './qa'
            qa_output_dir: ./qa

        primary_executable:
            product_type: GSLC
            product_version: 0.1.0
            product_doi:
            composite_release_id:
            processing_type:
            processing_center:
            partial_granule_id:

        debug_level_group:
            debug_switch: false

        # TODO OPTIONAL - To setup type of worker
        worker:
            # OPTIONAL - To prevent downloading DEM / other data automatically. Default True
            internet_access: False

            # OPTIONAL - To explicitly use GPU capability if available. Default False
            gpu_enabled: False

            # Index of the GPU to use for processing, optional. Defaults to the
            # first available CUDA device. Ignored if *gpu_enabled* is False.
            gpu_id: 0

        # Output options for GSLC raster (e.g. compression, chunking, shuffle filter)
        output:
            # Data type of GSLC raster
            data_type: complex64_zero_mantissa

            # Enable gzip compression of GSLC raster
            compression_enabled: True

            # Level of compression applied to GSLC raster
            compression_level: 1

            # Chunk size of GSLC raster
            chunk_size: [512, 512]

            # File space strategy
            fs_strategy: page

            # File space page size in bytes
            fs_page_size: 4194304

            # Enable shuffle filtering of GSLC raster
            shuffle: True

        # ADT section - isce3 + pyre workflow
        processing:
            input_subset:
                # Frequencies and polarizations to process
                # Keys for frequency A and B followed by a list of polarizations to process:
                #     {frequency}: [polarizations]
                #
                # - If the entire field is left empty, all available frequencies will be processed.
                # - Otherwise, only frequencies listed (i.e, 'A' and/or 'B') will be processed.
                # - If the [polarizations] list is empty, all available polarizations
                # for given frequency will be processed
                #
                # Example 1:
                #     list_of_frequencies:  # (empty) process all polarizations from all
                #                           # available frequencies
                # Example 2:
                #     list_of_frequencies:
                #         A: [HH, HV]  # process only polarizations HH and HV from frequency A
                #         B:           # process all polarizations from frequency B
                #
                #
                list_of_frequencies:

            # TODO OPTIONAL - Only checked when internet access is available
            dem_download:
                # OPTIONAL - s3 bucket / curl URL / local file
                source:
                top_left:
                    x:
                    y:
                bottom_right:
                    x:
                    y:

            # OPTIONAL - do we need this step. Should bandpass filter from 40MHz/20MHz be included
            pre_process:
                filter:
                    A:
                        type:
                        parameters:
                    B:
                        type:
                        parameters:

            # OPTIONAL - Mechanism to specify output posting and DEM
            geocode:
                # OPTIONAL - To control output grid in same units as output EPSG
                x_snap:

                # OPTIONAL - To control output grid in same units as output EPSG
                y_snap:

                # OPTIONAL - Same as input DEM if not provided.
                output_epsg:

                # OPTIONAL - Spacing between pixels, in same units as output EPSG.
                # If not provided, spacing values will be taken from provided DEM.
                # All postings/spacings must be > 0.
                # ISCE3 output rasters always have North-up West-left orientation
                output_posting:
                    A:
                        x_posting:
                        y_posting:
                    B:
                        x_posting:
                        y_posting:

                # OPTIONAL - Can control with absolute values or with snap values
                top_left:
                    # OPTIONAL - Set top-left y in same units as output EPSG
                    y_abs:
                    # OPTIONAL - Set top-left x in same units as output EPSG
                    x_abs:

                # OPTIONAL - Can control with absolute values or with snap values
                bottom_right:
                    y_abs:
                    x_abs:

            radar_grid_cubes:

                # List of heights in meters
                heights:

                # OPTIONAL - Same as the geocode group output_epsg if not provided
                output_epsg:

                # OPTIONAL - Spacing between pixels, in same units as output EPSG.
                # If not provided, spacing values will be taken from geocode group
                # parameters.
                # All postings/spacings must be > 0.
                # ISCE3 output rasters always have North-up West-left orientation
                output_posting:
                    x_posting:
                    y_posting:

                # OPTIONAL - To control output grid in same units as output EPSG
                y_snap:

                # OPTIONAL - To control output grid in same units as output EPSG
                x_snap:

                # OPTIONAL - Can control with absolute values or with snap values
                top_left:
                    # OPTIONAL - Set top-left y in same units as output EPSG
                    y_abs:
                    # OPTIONAL - Set top-left x in same units as output EPSG
                    x_abs:

                # OPTIONAL - Can control with absolute values or with snap values
                bottom_right:
                    y_abs:
                    x_abs:

            calibration_information:

                # OPTIONAL - Spacing between pixels, in same units as output EPSG.
                # All postings/spacings must be > 0.
                output_posting:
                    x_posting:
                    y_posting:

            processing_information:

                # OPTIONAL - Spacing between pixels, in same units as output EPSG.
                # All postings/spacings must be > 0.
                output_posting:
                    x_posting:
                    y_posting:

            geo2rdr:
                threshold: 1.0e-8
                maxiter: 25

            ampcor:
                # Lines per block to process in batch
                lines_per_block: 1000

                # Number of columns for chip/template window in reference image
                window_range: 64

                # Number of lines for chip/template window in reference image
                window_azimuth: 64

                # Number of columns for search chip/template in secondary image
                half_search_range: 4

                # Number of lines for search chip/template in secondary image
                half_search_azimuth: 4

                # Number of columns to skip in reference image for next offset estimate
                skip_range: 100

                # Number of lines to skip in reference image for next offset estimate
                skip_azimuth: 100

                # Margin around image edges to avoid for offset computation
                margin: 0

                # Number of columns of output offset (covariance, snr) file
                # TODO think about using only eihter `skip` or `width / length`
                offset_width:

                # Number of lines of output offset (covariance, snr) file
                offset_length:

                # Start pixel of the reference image along slant range
                start_pixel_range:

                # Start pixel of the reference image along azimuth
                start_pixel_azimuth:

                # Domain (frequency or spatial) where to compute cross-correlation
                cross_correlation_domain: spatial

                # Anti-aliasing oversampling factor to apply to reference/secondary SLC
                # prior to cross-correlation computation
                slc_oversampling_factor: 2

                # Deramp data prior to FFT: magnitude or complex (linear phase ramp)
                deramping_method: complex

                # Square zoom window size for cross-correlation statistics (SNR, covariance)
                correlation_statistics_zoom: 21

                # Square zoom window size for sub-pixel offset refinement
                correlation_surface_zoom: 8

                # Oversampling factor of the correlation surface for sub-pixel offset refinement
                correlation_surface_oversampling_factor: 64

                # Correlation surface oversampling algorithm
                correlation_surface_oversampling_method: sinc

                # Number of cuda streams
                cuda_streams:

                # Number of offset estimates to process in batch along slant range
                windows_batch_range: 1

                # Number of offset estimates to process in batch along azimuth
                windows_batch_azimuth: 1

            blocksize:
                x: 1000
                y: 1000

            flatten: True

            correction_luts:
                # Boolean flag to activate/deactivate model-based solid earth tide corrections
                solid_earth_tides_enabled: True

        # OPTIONAL - Group containing CEOS Analysis Ready Data (CARD) parameters
        # to populate the output product's metadata
        ceos_analysis_ready_data:

            # Data access for the source data (URL or DOI)
            source_data_access:

            # Data access for the output product (URL or DOI)
            product_data_access:

            # Data access for the static layers product associated with the output product (URL or DOI)
            static_layers_data_access:

            # Estimated geometric accuracy (bias and standard deviation)
            # in meters in the X- and Y-directions over the coordinate
            # system defined by the product's EPSG code
            estimated_geometric_accuracy_bias_x:
            estimated_geometric_accuracy_bias_y:
            estimated_geometric_accuracy_standard_deviation_x:
            estimated_geometric_accuracy_standard_deviation_y:

        qa:

            workflows:

                # Flag to run `validate` workflow to validate the
                # input file against its product spec.
                # Default: True
                validate: true

                # Flag to run `qa_reports` workflow to generate a
                # PDF report, geolocated browse image, compute statistics
                # on the input file, etc..
                # Default: True
                qa_reports: true

                # Flag to run Point Target Analyzer calibration tool.
                # Default: True
                point_target_analyzer: true

            validation:

                # True to raise an exception if one or more metadata cubes contains
                # all non-finite (e.g. Nan, +/- Inf) values, or if one or more
                # z-dimension height layers in a 3D cube has all non-finite values.
                # False to quiet the exception (although it will still be logged).
                # Default: True
                metadata_cubes_fail_if_all_nan: true

            qa_reports:

                backscatter_img:

                    # True to compute backscatter in linear units when generating
                    # the backscatter image for the browse images and graphical
                    # summary PDF. False for decibel units.
                    # Default: True
                    linear_units: true

                    # Number of looks along each axis of the Frequency A
                    # image arrays for multilooking the backscatter image.
                    # Format: [<num_rows>, <num_cols>]
                    # Example: [6,7]
                    # If not provided, the QA code to compute the nlooks values
                    # based on `longest_side_max`.
                    # Default: None
                    nlooks_freqa:

                    # Number of looks along each axis of the Frequency B
                    # image arrays for multilooking the backscatter image.
                    # Format: [<num_rows>, <num_cols>]
                    # Example: [6,7]
                    # If not provided, the QA code to compute the nlooks values
                    # based on `longest_side_max`.
                    # Default: None
                    nlooks_freqb:

                    # The maximum number of pixels allowed for the longest side
                    # of the final 2D multilooked browse image. Defaults to 2048.
                    # If `nlooks_freq*` parameter(s) is not None, nlooks
                    # values will take precedence.
                    # Default: 2048
                    longest_side_max: 2048

                    # Percentile range that the image array will be clipped to
                    # and that the colormap covers. Must be in range [0.0, 100.0].
                    # Default: (5.0, 95.0)
                    percentile_for_clipping: [5.0, 95.0]

                    # Gamma correction parameter applied to backscatter and browse image(s).
                    # Gamma will be applied as follows:
                    # array_out = normalized_array ^ gamma
                    # where normalized_array is a copy of the image with values
                    # scaled to the range [0,1].
                    # The image colorbar will be defined with respect to the input
                    # image values prior to normalization and gamma correction.
                    # If None, then no normalization and no gamma correction will be applied.
                    # Default: 0.5
                    gamma: 0.5

                    # Color to plot NaN pixels for the PDF report.
                    # For transparent, set to None.
                    # The color should given in a format recognized by matplotlib:
                    # https://matplotlib.org/stable/users/explain/colors/colors.html
                    # (Note: Browse image PNG will always plot NaN as transparent.)
                    # Default: blue
                    nan_color_in_pdf: blue

                    # User-preferred tile shape for processing images by batches.
                    # Actual tile shape may be modified by QA to be an integer
                    # multiple of the number of looks for multilooking, of the
                    # decimation ratio, etc.
                    # Format: [<num_rows>, <num_cols>]
                    # -1 to indicate all rows / all columns (respectively).
                    # Default: (1024, 1024)
                    tile_shape: [1024, 1024]

                histogram:

                    # Step size to decimate the input array for computing
                    # the backscatter and phase histograms.
                    # For example, [2,3] means every 2nd azimuth line and
                    # every 3rd range sample will be used to compute the histograms.
                    # Format: [<azimuth>, <range>]
                    # Default: (8, 8)
                    decimation_ratio: [8, 8]

                    # Range in dB for the backscatter histogram's bin edges. Endpoint will
                    # be included. Format: [<starting value>, <endpoint>]
                    # Default: (-80.0, 20.0)
                    backscatter_histogram_bin_edges_range: [-80.0, 20.0]

                    # The range for the phase histograms' y-axis.
                    # Format: [<min of range>, <max of range>]
                    # Examples: None, [0.0, None], [None, 0.7], [-0.2, 1.2], [None, None]
                    # If the min or max is set to None, then that limit is set dynamically
                    # based on the range of phase histogram density values.
                    # If None, this is equivalent to [None, None].
                    # Default: (0.0, 0.5)
                    phase_histogram_y_axis_range: [0.0, 0.5]

                    # True to compute phase histogram in radians units,
                    # False for degrees units.
                    # Note: If False, suggest adjusting `phase_histogram_y_axis_range`
                    # appropriately for degrees rather than radians.
                    # Default: True
                    phs_in_radians: true

                    # User-preferred tile shape for processing images by batches.
                    # Actual tile shape may be modified by QA to be an integer
                    # multiple of the number of looks for multilooking, of the
                    # decimation ratio, etc.
                    # Format: [<num_rows>, <num_cols>]
                    # -1 to indicate all rows / all columns (respectively).
                    # Default: (1024, -1)
                    tile_shape: [1024, -1]

            point_target_analyzer:

                # The width, in samples, of the square block of image data
                # centered around the target position to extract for oversampling
                # and peak finding. Must be >= 1.
                # Default: 64
                nchip: 64

                # The upsampling ratio. Must be >= 1.
                # Default: 32
                upsample_factor: 32

                # Option controlling how the target peak position is
                # estimated. Valid options are 'time' or 'frequency'.

                # 'time':
                # The peak location is found in the time domain by detecting the
                # maximum value within a square block of image data around the
                # expected target location. The signal data is upsampled to
                # improve precision.

                # 'frequency':
                # The peak location is found by estimating the phase ramp in the
                # frequency domain. This mode is useful when the target is
                # well-focused, has high SNR, and is the only target in the
                # neighborhood (often the case in point target simulations).
                # Default: time
                peak_find_domain: time

                # The number of sidelobes, including the main lobe, to
                # use for computing the integrated sidelobe ratio (ISLR).
                # Must be > 1.
                # Default: 10
                num_sidelobes: 10
